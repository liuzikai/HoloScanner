namespace HL2UnityPlugin
{
    // XMVECTOR in DirectX
    struct Vector4 
    {
        Single x;
        Single y;
        Single z;
        Single w;
    };

    // XMMATRIX in DirectX
    struct Matrix44 
    {
        Single _11;
        Single _12;
        Single _13;
        Single _14;
        Single _21;
        Single _22;
        Single _23;
        Single _24;
        Single _31;
        Single _32;
        Single _33;
        Single _34;
        Single _41;
        Single _42;
        Single _43;
        Single _44;
    };

    enum HandJointIndex
    {
        Palm,
        Wrist,
        ThumbMetacarpal,
        ThumbProximal,
        ThumbDistal,
        ThumbTip,
        IndexMetacarpal,
        IndexProximal,
        IndexIntermediate,
        IndexDistal,
        IndexTip,
        MiddleMetacarpal,
        MiddleProximal,
        MiddleIntermediate,
        MiddleDistal,
        MiddleTip,
        RingMetacarpal,
        RingProximal,
        RingIntermediate,
        RingDistal,
        RingTip,
        PinkyMetacarpal,
        PinkyProximal,
        PinkyIntermediate,
        PinkyDistal,
        PinkyTip,
        Count,
    };

    enum HandIndex
    {
        Left,
        Right,
        Count,
    };

    runtimeclass HL2Cannon
    {
        HL2Cannon();

        void StartUpdateLoop();
        void StopUpdateLoop();

        // Head tracking (class TrackedHands)
        Matrix44 GetHeadTransform();

        // Hand tracking (class TrackedHands)
        Boolean IsHandTracked(HandIndex handIndex);
        Vector4 GetJoint(HandIndex handIndex, HandJointIndex jointIndex);
	    Vector4 GetJointOrientation(HandIndex handIndex, HandJointIndex jointIndex);	// Vector4 is a quaternion in this case
        Matrix44 GetOrientedJoint(HandIndex handIndex, HandJointIndex jointIndex);
        
        // Eye tracking (class MixedReality)
        Boolean IsEyeTrackingActive();
        Vector4 GetEyeGazeOrigin();
	    Vector4 GetEyeGazeDirection();
    }
}
